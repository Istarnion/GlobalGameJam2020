{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///./node_modules/howler/dist/howler.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/ajax.js","webpack:///./src/animation.js","webpack:///./src/app.js","webpack:///./src/assets.js","webpack:///./src/camera.js","webpack:///./src/game.js","webpack:///./src/game_room.js","webpack:///./src/graphics.js","webpack:///./src/input.js","webpack:///./src/musicManager.js","webpack:///./src/player.js","webpack:///./src/tiled_map.js","webpack:///./src/tileset.js","webpack:///./src/timer.js","webpack:///./src/utils.js"],"names":["ajax","get","url","Promise","resolve","reject","request","XMLHttpRequest","onreadystatechange","readyState","DONE","status","responseText","console","error","open","send","Animation","name","def","animations","image","requireProperty","spriteSheet","sprites","timePerFrame","getPropertyOrDefault","looping","anchor_x","anchor_y","frames","frameWidth","width","frameHeight","height","i","push","x","y","w","h","framesAcross","framesDown","marginX","marginY","spacingX","spacingY","j","frame","cycleListeners","frameListeners","timeOnCurrentFrame","currentFrame","paused","direction","deltaTime","listener","numFrames","gfx","drawImage","length","setGameSize","fillText","prevTime","performance","now","init","roomStack","GameRoom","update","clear","Math","min","input","musicManager","Timer","window","requestAnimationFrame","lateUpdate","imagesToLoad","img","images","hasOwnProperty","all","loadMapDefs","maps","loadImages","then","character","FlisesettGGJ2020","player_idle","player_walk_right","player_walk_left","player_ipad_open","player_ipad_look","player_ipad_close","player_climbing","player_falling","player_sleep","player_confused","dungeon","WIDTH","HEIGHT","camera","bounds_left","bounds_right","bounds_top","bounds_bottom","target","setBounds","left","right","top","bottom","Room","dt","Arena","gameObjects","dead","splice","gameObject","GameObject","RoomStack","rooms","room","pause","pop","finalize","resume","map","TiledMap","arena","add","Player","save","translate","drawLayer","restore","canvas","document","getElementById","getContext","disableAntiAlias","webkitImageSmoothingEnabled","msImageSmoothingEnabled","imageSmoothingEnabled","pixelRatio","devicePixelRatio","scale","clientWidth","clientHeight","last_resize","onResize","innerWidth","innerHeight","wanted_ratio","curr_ratio","floor","style","addEventListener","drawLine","x_from","y_from","x_to","y_to","beginPath","moveTo","lineTo","closePath","stroke","clearRect","loadImage","image_to_load","Image","onload","onerror","src","images_to_load","image_promises","forEach","failed_images","getBitmap","tempCanvas","createElement","ctx","result","pixels","getImageData","data","getPixel","start","pixel","r","g","b","a","mouse_x","mouse_y","keyDownListeners","specificKeyDownListeners","keyUpListeners","specificKeyUpListeners","isKeyDown","key","altKey","keyStates","isKeyJustPressed","isKeyJustReleased","addKeyDownListener","arguments","addKeyUpListener","removeKeyDownListener","f","removeFromArray","removeKeyUpListener","currState","prevState","space","enter","s","d","up","down","q","e","one","two","three","mouse","getKeyNameFromCode","code","preventDefault","client_rect","getClientRects","clientX","clientY","mouse_down","MusicManager","music","menuLoop","Howl","loop","gameLoop","creditsLoop","setGameState","stop","play","MAX_FALL_SPEED","CLIMB_SPEED","COLLISION_LAYER","STAIRS_RIGHT","STAIRS_LEFT","LADDER","states","PLATFORMING","TILE_PLACING","game","state","idle_anim","walk_right_anim","walk_left_anim","climbing_anim","falling_anim","curr_anim","speed","fall_speed","properties","player_start_x","tile_width","player_start_y","tile_height","remainder_x","remainder_y","movement_x","abs","moveX","can_open_ipad","collidesAt","foottile","tileAt","base_y","t","moveY","tile_x","tile_y","tile_index","layers","tiles","fillStyle","fillRect","draw","amount","move","round","sign","tile","index","tiled_map_defs","createTileset","ts","Tileset","tilewidth","tileheight","margin","spacing","anim","last_frame_start","current_index","animation","tileid","duration","current","animated_tiles","id","map_name","JSON","parse","prop","value","tileset","tilesets","objects","l","type","layer","group","obj","assert","drawTile","resulve","map_promises","map_def","failed_maps","tileWidth","tileHeight","tilemap","imgWidth","widthWithSpacing","heightWithSpacing","tilesAcross","animated_tile","_nothing_","updateTimerHandle","handle","time","during","max","limit","count","after","TimerInstance","functions","delay","cancel","func","Infinity","coroutine","next","done","func_name","the_good_tween","tween_funcs","out","inout","tween","original_values","remaining","array","element","indexOf"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wC;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;;;;;;ACNA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8B;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;;;;;;ACPA,qBAAqB,mBAAO,CAAC,iFAAkB;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,2B;;;;;;;;;;;ACjBA,cAAc,mBAAO,CAAC,0EAAmB;;AAEzC,4BAA4B,mBAAO,CAAC,+FAAyB;;AAE7D;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4C;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iC;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yB;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,MAAM;AACtB,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;;AAEA;AACA,yBAAyB,cAAc;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;AACA,uBAAuB,cAAc;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA,sCAAsC,MAAM;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA,uDAAuD;;AAEvD;AACA;AACA;;AAEA;AACA,6EAA6E;AAC7E;AACA,iDAAiD;AACjD,gDAAgD;AAChD,gDAAgD;AAChD,gDAAgD;AAChD,gDAAgD;AAChD,kDAAkD;AAClD,mDAAmD,uCAAuC,uCAAuC;AACjI,mDAAmD,uCAAuC,uCAAuC;AACjI,kDAAkD;AAClD,kDAAkD;AAClD,kDAAkD;AAClD,qDAAqD,wCAAwC;AAC7F;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;;AAEA;AACA,yBAAyB,cAAc;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC;AACA,uBAAuB,iCAAiC;AACxD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,YAAY;AAC5C,kCAAkC,aAAa;AAC/C,kCAAkC,aAAa;AAC/C,4CAA4C,kBAAkB;AAC9D,4CAA4C,kBAAkB;AAC9D,oCAAoC,cAAc;AAClD,kCAAkC,aAAa;AAC/C,kCAAkC,aAAa;AAC/C,kCAAkC,aAAa;AAC/C,sCAAsC,eAAe;AACrD,kCAAkC,aAAa;AAC/C,kCAAkC,aAAa;AAC/C,sCAAsC,eAAe;AACrD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,oBAAoB;AACvC;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,KAAK;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,cAAc;AAC9B,gBAAgB,QAAQ;AACxB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA,yCAAyC;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,aAAa;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,cAAc;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,aAAa;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,QAAQ;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,SAAS;AACzB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,2BAA2B,IAAI,eAAe;AAC1E;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,SAAS;AACzB,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,SAAS;AACzB,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,MAAM;AACvC;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,MAAM;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,eAAe,uBAAuB;AACtC;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,MAAM;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,MAAM;AACtB;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,MAAM;AACtB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,kDAAkD,EAAE;AACnE;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kBAAkB,GAAG;AACrB;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,cAAc,YAAY;AAC1B,cAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,cAAc,KAAK;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM,IAA0C;AAChD,IAAI,iCAAO,EAAE,mCAAE;AACf;AACA;AACA;AACA;AACA,KAAK;AAAA,oGAAC;AACN;;AAEA;AACA,MAAM,IAA8B;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,0CAA0C;AAC7C;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,cAAc;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,MAAM;AAC1C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,aAAa;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,aAAa;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,eAAe;AACrD,gCAAgC,YAAY;AAC5C,gDAAgD,oBAAoB;;AAEpE;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,YAAY;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,WAAW;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,WAAW;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,cAAc;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,SAAS;AACvB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,cAAc,MAAM;AACpB,aAAa,OAAO;AACpB;AAC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","file":"ggj.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/app.js\");\n","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","/*!\n *  howler.js v2.1.3\n *  howlerjs.com\n *\n *  (c) 2013-2019, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        for (var i=0; i<self.html5PoolSize; i++) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n        self.ctx.suspend().then(function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        });\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhrWithCredentials = o.xhrWithCredentials || false;\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload) {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended. \n        // If there is, play that sound. If not, continue as usual.  \n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = parseFloat(from);\n      to = parseFloat(to);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Make sure the volume is in the right bounds.\n        vol = Math.max(0, vol);\n        vol = Math.min(1, vol);\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = 'auto';\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.withCredentials = self._xhrWithCredentials;\n      xhr.responseType = 'arraybuffer';\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && Howler._navigator.standalone && !safari || Howler._navigator && !Howler._navigator.standalone && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Define globally in case AMD is not available or unused.\n  if (typeof window !== 'undefined') {\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.1.3\n *  howlerjs.com\n *\n *  (c) 2013-2019, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\nexport const ajax = {\n    get: (url) => {\n        return new Promise((resolve, reject) => {\n            const request = new XMLHttpRequest();\n            request.onreadystatechange = function() {\n                if(request.readyState === XMLHttpRequest.DONE)\n                {\n                    if(request.status === 200)\n                    {\n                        resolve(request.responseText);\n                    }\n                    else\n                    {\n                        console.error(`GET request for ${url} failed with code ${request.status}.`);\n                        reject(url);\n                    }\n                }\n            };\n\n            request.open('GET', url);\n            request.send();\n        });\n    }\n};\n","import { gfx, sprites } from \"./graphics.js\";\nimport { getPropertyOrDefault, requireProperty } from \"./utils.js\";\nimport { Directions } from \"./utils.js\";\nimport { animations } from \"./assets.js\";\n\nexport class Animation {\n\n    constructor(name) {\n        const def = animations[name];\n        const image = requireProperty(def, \"image\");\n        this.spriteSheet = sprites[image];\n        this.timePerFrame = getPropertyOrDefault(def, \"timePerFrame\", 0.5);\n        this.looping = getPropertyOrDefault(def, \"looping\", \"once\");\n        this.anchor_x = 0;\n        this.anchor_y = 0;\n\n        this.frames = [];\n\n        if(typeof def.frames === \"number\") {\n            // Animation strip\n            const frameWidth = this.spriteSheet.width / def.frames;\n            const frameHeight = this.spriteSheet.height;\n            for(let i=0; i<def.frames; ++i) {\n                this.frames.push({ x: i * frameWidth,\n                    y: 0,\n                    w: frameWidth,\n                    h: frameHeight\n                });\n            }\n        }\n        else if(!!def.frames.x && !!def.frames.y) {\n            // Sprite sheet\n            const framesAcross = def.frames.x;\n            const framesDown = def.frames.y;\n            const marginX = getPropertyOrDefault(def.frames, \"mx\", 0);\n            const marginY = getPropertyOrDefault(def.frames, \"my\", 0);\n            const spacingX = getPropertyOrDefault(def.frames, \"sx\", 0);\n            const spacingY = getPropertyOrDefault(def.frames, \"sy\", 0);\n\n            const frameWidth = (this.spriteSheet.width - marginX - framesAcross * spacingX) / framesAcross;\n            const frameHeight = (this.spriteSheet.height - marginY - framesDown * spacingY) / framesDown;\n\n            for(let i=0; i<framesDown; ++i) {\n                for(let j=0; j<framesAcross; ++j) {\n                    this.frames.push({\n                        x: marginX + j * (frameWidth + spacingX),\n                        y: marginY + i * (frameHeight + spacingY),\n                        w: frameWidth,\n                        h: frameHeight\n                    });\n                }\n            }\n        }\n        else {\n            // Array of frames\n            for(const frame of def.frames) {\n                this.frames.push(frame);\n            }\n        }\n\n        this.cycleListeners = [];\n        this.frameListeners = [];\n\n        this.timeOnCurrentFrame = 0;\n        this.currentFrame = 0;\n        this.paused = false;\n        this.direction = 1;\n    }\n\n    update(deltaTime) {\n        if(!this.paused) {\n            this.timeOnCurrentFrame += deltaTime;\n            if(this.timeOnCurrentFrame >= this.timePerFrame) {\n                this.timeOnCurrentFrame = 0;\n                this.currentFrame += this.direction;\n\n                if(this.direction !== 0) {\n                    for(const listener of this.frameListeners) {\n                        listener(this.currentFrame, this);\n                    }\n                }\n\n                if(this.currentFrame >= this.numFrames || this.currentFrame < 0) {\n                    // NOTE(istarnion): We support animating bot ways, in all modes.\n                    switch(this.looping) {\n                        case \"once\":\n                            this.currentFrame -= this.direction;\n                            this.direction = 0;\n                            break;\n                        case \"loop\":\n                            this.currentFrame -= this.direction;\n                            this.currentFrame = this.numFrames - 1 - this.currentFrame;\n                            break;\n                        case \"ping-pong\":\n                            if(this.currentFrame < 0) this.currentFrame = 0;\n                            else if(this.currentFrame >= this.numFrames) this.currentFrame = this.numFrames - 1;\n                            this.currentFrame -= this.direction;\n                            this.direction *= -1;\n                            break;\n                    }\n\n                    for(const listener of this.cycleListeners) {\n                        listener(this);\n                    }\n                }\n            }\n        }\n    }\n\n    draw(x, y) {\n        const frame = this.frames[this.currentFrame];\n        x -= frame.w * this.anchor_x;\n        y -= frame.h * this.anchor_y;\n        gfx.drawImage(this.spriteSheet, frame.x, frame.y, frame.w, frame.h, x, y, frame.w, frame.h);\n    }\n\n    reset() {\n        this.currentFrame = 0;\n        this.timeOnCurrentFrame = 0;\n        this.paused = false;\n        this.direction = 1;\n    }\n\n    addCycleListener(listener) {\n        this.cycleListeners.push(listener);\n    }\n\n    addFrameListener(listener) {\n        this.frameListeners.push(listener);\n    }\n\n    get numFrames() {\n        return this.frames.length;\n    }\n}\n\n","import { gfx, setGameSize, clear, loadImages } from \"./graphics.js\";\nimport { images, maps } from \"./assets.js\";\nimport { loadMapDefs } from \"./tiled_map.js\";\nimport { input } from \"./input.js\";\nimport { musicManager } from \"./musicManager\";\nimport { Timer } from \"./timer.js\";\nimport { roomStack } from \"./game.js\";\n\nimport { GameRoom } from \"./game_room.js\";\n\nsetGameSize(320, 240);\n\ngfx.fillText(\"Loading...\", gfx.width / 2, gfx.height / 2);\n\nlet prevTime = performance.now();\n\n// THis is run once all assets are loaded. Called from the bottom of this file\nfunction init() {\n    roomStack.push(new GameRoom());\n}\n\n// Called every frame, starting straight after init() is run.\nfunction update() {\n    clear();\n    const now = performance.now();\n    const deltaTime = Math.min(0.0333, (now - prevTime) / 1000.0);\n    prevTime = now;\n\n    input.update();\n    musicManager.update(deltaTime);\n\n    roomStack.update(deltaTime);\n\n    Timer.update(deltaTime);\n\n    window.requestAnimationFrame(update);\n    input.lateUpdate();\n}\n\n// Create list of images to load in proper format\nconst imagesToLoad = [];\nfor(const img in images) {\n    if(images.hasOwnProperty(img)) {\n        imagesToLoad.push([ img, images[img] ]);\n    }\n}\n\n// Start loading all assets, call init() when done, then start the game loop\nPromise.all([loadMapDefs(maps), loadImages(imagesToLoad)]).then(() => {\n    init();\n    update(); // This starts the update loop\n});\n\n","export const images = {\n    character: \"res/Character.png\",\n    FlisesettGGJ2020: \"res/FlisesettGGJ2020.png\"\n};\n\nexport const animations = {\n    player_idle: {\n        image: \"character\",\n        timePerFrame: 0.1,\n        looping: 'loop',\n        frames: [\n            { x:  0, y: 0, w: 16, h: 16 },\n            { x: 16, y: 0, w: 16, h: 16 },\n            { x: 32, y: 0, w: 16, h: 16 },\n            { x: 48, y: 0, w: 16, h: 16 }\n        ]\n    },\n    player_walk_right: {\n        image: \"character\",\n        timePerFrame: 0.1,\n        looping: 'loop',\n        frames: [\n            { x:  0, y: 16, w: 16, h: 16 },\n            { x: 16, y: 16, w: 16, h: 16 },\n            { x: 32, y: 16, w: 16, h: 16 },\n            { x: 48, y: 16, w: 16, h: 16 }\n        ]\n    },\n    player_walk_left: {\n        image: \"character\",\n        timePerFrame: 0.1,\n        looping: 'loop',\n        frames: [\n            { x:  0, y: 32, w: 16, h: 16 },\n            { x: 16, y: 32, w: 16, h: 16 },\n            { x: 32, y: 32, w: 16, h: 16 },\n            { x: 48, y: 32, w: 16, h: 16 }\n        ]\n    },\n    player_ipad_open: {\n        image: \"character\",\n        timePerFrame: 0.1,\n        looping: 'once',\n        frames: [\n        ]\n    },\n    player_ipad_look: {\n        image: \"character\",\n        timePerFrame: 0.1,\n        looping: 'loop',\n        frames: [\n        ]\n    },\n    player_ipad_close: {\n        image: \"character\",\n        timePerFrame: 0.1,\n        looping: 'once',\n        frames: [\n        ]\n    },\n    player_climbing: {\n        image: \"character\",\n        timePerFrame: 0.1,\n        looping: 'loop',\n        frames: [\n            { x:  0, y: 80, w: 16, h: 16 },\n            { x: 16, y: 80, w: 16, h: 16 },\n            { x: 32, y: 80, w: 16, h: 16 },\n            { x: 48, y: 80, w: 16, h: 16 },\n            { x: 64, y: 80, w: 16, h: 16 },\n            { x: 80, y: 80, w: 16, h: 16 }\n        ]\n    },\n    player_falling: {\n        image: \"character\",\n        timePerFrame: 0.1,\n        looping: 'loop',\n        frames: [\n            { x:  0, y: 96, w: 16, h: 16 },\n            { x: 16, y: 96, w: 16, h: 16 },\n        ]\n    },\n    player_sleep: {\n        image: \"character\",\n        timePerFrame: 0.1,\n        looping: 'loop',\n        frames: [\n        ]\n    },\n    player_confused: {\n        image: \"character\",\n        timePerFrame: 0.1,\n        looping: 'loop',\n        frames: [\n        ]\n    }\n};\n\nexport const maps = {\n    dungeon: \"res/DD_Map.json\"\n};\n\n","const WIDTH = 320;\nconst HEIGHT = 240;\n\nexport const camera = {\n    x: 0,\n    y: 0,\n    bounds_left: 0,\n    bounds_right: 100*16,\n    bounds_top: 0,\n    bounds_bottom: 100*16\n};\n\ncamera.target = (x, y) => {\n    x -= WIDTH/2;\n    y -= HEIGHT/2;\n\n    if(x        <  camera.bounds_left)   x = camera.bounds_left;\n    if(x+WIDTH  >= camera.bounds_right)  x = camera.bounds_right-WIDTH;\n    if(y        <  camera.bounds_top)    y = camera.bounds_top;\n    if(y+HEIGHT >= camera.bounds_bottom) y = camera.bounds_bottom-HEIGHT;\n\n    camera.x = x;\n    camera.y = y;\n};\n\ncamera.setBounds = (left, right, top, bottom) => {\n    camera.bounds_left = left;\n    camera.bounds_right = right;\n    camera.bounds_top = top;\n    camera.bounds_bottom = bottom;\n};\n\n","/*\n * This system is inspired by the excellent BYTEPATH tutorials (https://github.com/adnzzzzZ/blog/issues/30)\n * There are three components:\n * - Rooms are what is called stages or scenes in other engines. They are the main game states\n * - Most rooms contains an Area, which is a container for game objects. for instance, in a Sokoban game,\n *   there could be one gameplay room that had one area per level, and another room for the main menu and\n *   credits screen.\n * - Areas are glorified lists of game objects and handles iterating through and updating them, as well as\n *   removing them when they die. If needed for a game, Area would be the place to implement query functions\n *   like getGameObjectsWithinCircle or simmilar.\n *\n * Typically, Room and GameObject are inherited from and never used directly, while Area objects are used\n * as-is in the classes derived from Room that need one.\n *\n * The exported global room stack is used as an overarching manager for the different rooms\n */\n\nexport class Room {\n    init() {}\n    finalize() {}\n    update(dt) {}\n    pause() {}\n    resume() {}\n}\n\nexport class Arena {\n    constructor() {\n        this.gameObjects = [];\n    }\n\n    update(dt) {\n        for(var i=0; i<this.gameObjects.length; ++i) {\n            this.gameObjects[i].update(dt);\n        }\n\n        for(var i=this.gameObjects.length-1; i>=0; --i) {\n            if(this.gameObjects[i].dead) {\n                this.gameObjects.splice(i, 1);\n            }\n        }\n    }\n\n    add(gameObject) {\n        this.gameObjects.push(gameObject);\n    }\n}\n\nexport class GameObject {\n    constructor() {\n        this.dead = false;\n        this.x = 0;\n        this.y = 0;\n    }\n\n    update(dt) {}\n\n    die() {\n        this.dead = true;\n    }\n}\n\nclass RoomStack {\n    constructor() {\n        this.rooms = [];\n    }\n\n    update(dt) {\n        if(this.rooms.length > 0) {\n            this.rooms[this.rooms.length-1].update(dt);\n        }\n    }\n\n    push(room) {\n        if(this.rooms.length > 0) {\n            this.rooms[this.rooms.length-1].pause();\n        }\n\n        this.rooms.push(room);\n        room.init();\n    }\n\n    pop() {\n        this.rooms.pop().finalize();\n\n        if(this.rooms.length > 0) {\n            this.rooms[this.rooms.length-1].resume();\n        }\n    }\n}\n\nexport const roomStack = new RoomStack();\n\n","import { Room, Arena } from \"./game.js\";\nimport { TiledMap } from \"./tiled_map.js\";\nimport { Player } from \"./player.js\";\nimport { gfx } from \"./graphics.js\";\nimport { camera } from \"./camera.js\";\nimport { input } from \"./input.js\";\n\nexport class GameRoom extends Room {\n    constructor() {\n        super();\n        this.map = new TiledMap(\"dungeon\");\n        this.arena = new Arena();\n\n        this.arena.add(new Player(this));\n    }\n\n    update(dt) {\n        gfx.save();\n        gfx.translate(-camera.x, -camera.y);\n\n        this.map.drawLayer(0);\n\n        this.arena.update(dt);\n\n        gfx.restore();\n    }\n}\n\n","import { Directions } from \"./utils.js\";\n\nconst canvas = document.getElementById(\"game-canvas\");\nexport const gfx = canvas.getContext(\"2d\");\n\n// Turn off anti-aliasing for images.\nconst disableAntiAlias = () => {\n    gfx.webkitImageSmoothingEnabled = false;\n    gfx.msImageSmoothingEnabled = false;\n    gfx.imageSmoothingEnabled = false;\n};\n\nconst pixelRatio = !!window.devicePixelRatio ? window.devicePixelRatio : 1;\ngfx.scale(pixelRatio, pixelRatio);\ngfx.save(); // Save the default scale (transform)\n\ngfx.width = canvas.clientWidth;\ngfx.height = canvas.clientHeight;\n\nlet last_resize = 0;\nconst onResize = () => {\n    const now = performance.now();\n    if(now - last_resize < 10) return;\n    last_resize = now;\n\n    const w = window.innerWidth;\n    const h = window.innerHeight;\n\n    const wanted_ratio = gfx.width / gfx.height;\n    const curr_ratio = w / h;\n\n    let scale = 1;\n\n    if(curr_ratio >= wanted_ratio) {\n        scale = h / gfx.height;\n        if(scale > 1) scale = Math.floor(scale);\n    }\n    else {\n        scale = w / gfx.width;\n        if(scale > 1) scale = Math.floor(scale);\n    }\n\n    canvas.width = (gfx.width * scale) * pixelRatio;\n    canvas.height = (gfx.height * scale) * pixelRatio;\n    canvas.style.width = `${gfx.width * scale}px`;\n    canvas.style.height = `${gfx.height * scale}px`;\n\n    gfx.restore(); // Restore default scale\n    gfx.save();    // ...and save it again\n    gfx.scale(scale * pixelRatio, scale * pixelRatio);\n    disableAntiAlias();\n};\n\nwindow.addEventListener(\"resize\", onResize);\n\ngfx.drawLine = (x_from, y_from, x_to, y_to) => {\n    this.gfx.beginPath();\n    this.gfx.moveTo(x_from, y_from);\n    this.gfx.lineTo(x_to, y_to);\n    this.gfx.closePath();\n    this.gfx.stroke();\n}\n\nexport const setGameSize = (w, h) => {\n    gfx.width = w;\n    gfx.height = h;\n    onResize();\n};\n\n// Clear the canvas\nexport const clear = () => {\n    gfx.clearRect(0, 0, gfx.width, gfx.height);\n};\n\n// A cache of loaded sprites. Access them by sprites[sprite_name]\nexport const sprites = {};\n\n// Load a single image. Input format: [\"name\", \"file\"]\nexport const loadImage = (image_to_load) => {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n        image.onload = function() {\n            sprites[image_to_load[0]] = image;\n            resolve();\n        }\n\n        image.onerror = function() {\n            reject(image_to_load);\n        }\n\n        image.src = image_to_load[1];\n    });\n};\n\n// Load multiple images. Input format; [[\"name1\", \"file1\"], [\"name2\", \"file2\"], ...]\nexport const loadImages = (images_to_load) => {\n    return new Promise((resolve, reject) => {\n        if(images_to_load.length === 0) {\n            resolve();\n            return;\n        }\n\n        const image_promises = [];\n\n        images_to_load.forEach((image) => {\n            image_promises.push(loadImage(image));\n        });\n\n        Promise.all(image_promises)\n        .then(() => {\n            resolve();\n        })\n        .catch((failed_images) => {\n            reject(failed_images);\n        });\n    });\n};\n\n// Get the pixel data for the given image.\n// The image must have been loaded.\n// This function returns an object like this:\n// { width: ***, height: ***, pixels: ***..., getPixel(x, y)},\n// or null, if something goes wrong.\n// A single pixel is on the form { r: 0-255, g: 0-255, b: 0-255, a: 0-255 }\nexport const getBitmap = (image) => {\n    const img = sprites[image];\n    if(!img) {\n        console.error(`${image} is not loaded`);\n        return null;\n    }\n\n    const tempCanvas = document.createElement(\"canvas\");\n    const ctx = tempCanvas.getContext(\"2d\");\n\n    tempCanvas.width = img.width;\n    tempCanvas.height = img.height;\n    ctx.clearRect(0, 0, img.width, img.height);\n    ctx.drawImage(img, 0, 0);\n\n    const result = {\n        width: img.width,\n        height: img.height,\n        pixels: ctx.getImageData(0, 0, img.width, img.height).data,\n        getPixel: function(x, y) {\n            const start = y * this.width * 4 + x * 4;\n            const pixel = {\n                r: this.pixels[start + 0],\n                g: this.pixels[start + 1],\n                b: this.pixels[start + 2],\n                a: this.pixels[start + 3]\n            };\n\n            return pixel;\n        }\n    };\n\n    return result;\n}\n\n","export const input = {\n    mouse_x: 0,\n    mouse_y: 0,\n    keyDownListeners: [],\n    specificKeyDownListeners: {},\n    keyUpListeners: [],\n    specificKeyUpListeners: {},\n\n    // Arguments: Either a keyname and function, or just a function\n    isKeyDown: function(key, altKey) { return !!this.keyStates[key][0] || (altKey && !!this.keyStates[altKey][0]);\n    },\n\n    isKeyJustPressed: function(key) {\n        if(!this.keyStates[key]) return false;\n        const result =\n            this.keyStates[key][0] &&\n            !this.keyStates[key][1];\n        return result;\n    },\n\n    isKeyJustReleased: function(key) {\n        const result =\n            !this.keyStates[key][0] &&\n            this.keyStates[key][1];\n        return result;\n    },\n\n    addKeyDownListener: function() {\n        if(typeof arguments[0] === \"string\") {\n            // Listener for specific key\n            if(this.specificKeyDownListeners.hasOwnProperty(arguments[0])) {\n                this.specificKeyDownListeners[arguments[0]].push(arguments[1]);\n            }\n            else {\n                this.specificKeyDownListeners[arguments[0]] = [arguments[1]];\n            }\n        }\n        else {\n            // Listener for any key\n            this.keyDownListeners.push(arguments[0]);\n        }\n    },\n\n    addKeyUpListener: function() {\n        if(typeof arguments[0] === \"string\") {\n            // Listener for specific key\n            if(this.specificKeyUpListeners.hasOwnProperty(arguments[0])) {\n                this.specificKeyUpListeners[arguments[0]].push(arguments[1]);\n            }\n            else {\n                this.specificKeyUpListeners[arguments[0]] = [arguments[1]];\n            }\n        }\n        else {\n            // Listener for any key\n            this.keyUpListeners.push(arguments[0]);\n        }\n    },\n\n    removeKeyDownListener: function(f) {\n        for(const key in this.specificKeyDownListeners) {\n            if(this.specificKeyDownListeners.hasOwnProperty(key)) {\n                if(removeFromArray(this.specificKeyDownListeners[key], f)) {\n                    return;\n                }\n            }\n        }\n\n        removeFromArray(this.keyDownListeners, f);\n    },\n\n    removeKeyUpListener: function(f) {\n        for(const key in this.specificKeyUpListeners) {\n            if(this.specificKeyUpListeners.hasOwnProperty(key)) {\n                if(removeFromArray(this.specificKeyUpListeners[key], f)) {\n                    return;\n                }\n            }\n        }\n\n        removeFromArray(this.keyUpListeners, f);\n    },\n\n    update: function() {\n        // Called by the main loop to broadcast events\n        for(const key in this.keyStates) {\n            if(this.keyStates.hasOwnProperty(key)) {\n                const currState = !!this.keyStates[key][0];\n                const prevState = !!this.keyStates[key][1];\n\n                if(currState && !prevState) {\n                    // console.log(`Key down: ${key}`);\n                    if(this.specificKeyDownListeners.hasOwnProperty(key)) {\n                        for(const listener of this.specificKeyDownListeners[key]) {\n                            listener(key);\n                        }\n                    }\n\n                    for(const listener of this.keyDownListeners) {\n                        listener(key);\n                    }\n                }\n                else if(!currState && prevState) {\n                    if(this.specificKeyUpListeners.hasOwnProperty(key)) {\n                        for(const listener of this.specificKeyUpListeners[key]) {\n                            listener(key);\n                        }\n                    }\n\n                    for(const listener of this.keyUpListeners) {\n                        listener(key);\n                    }\n                }\n            }\n        }\n    },\n\n    lateUpdate: function() {\n        for(const key in this.keyStates) {\n            if(this.keyStates.hasOwnProperty(key)) {\n                this.keyStates[key][1] = !!this.keyStates[key][0];\n            }\n        }\n    },\n\n    // NOTE(istarnion): Index 0 is current, 1 is previous\n    // This allows us to see what has changed from frame to frame\n    keyStates: {\n        space: [false, false],\n        enter: [false, false],\n        w: [false, false],\n        s: [false, false],\n        a: [false, false],\n        d: [false, false],\n        up: [false, false],\n        down: [false, false],\n        left: [false, false],\n        right: [false, false],\n        q: [false, false],\n        e: [false, false],\n        one: [false, false],\n        two: [false, false],\n        three: [false, false],\n        mouse: [false, false]\n    }\n};\n\nconst getKeyNameFromCode = (code) => {\n    let key = false;\n    switch(code) {\n        case \"Space\": key = \"space\"; break;\n        case \"Enter\": key = \"enter\"; break;\n        case \"ArrowUp\": key = \"up\"; break;\n        case \"ArrowDown\": key = \"down\"; break;\n        case \"ArrowLeft\": key = \"left\"; break;\n        case \"ArrowRight\": key = \"right\"; break;\n        case \"KeyW\": key = \"up\"; break;\n        case \"KeyA\": key = \"left\"; break;\n        case \"KeyS\": key = \"down\"; break;\n        case \"KeyD\": key = \"right\"; break;\n        case \"KeyQ\": key = \"q\"; break;\n        case \"KeyE\": key = \"e\"; break;\n        case \"Digit1\": key = \"one\"; break;\n        case \"Digit2\": key = \"two\"; break;\n        case \"Digit3\": key = \"three\"; break;\n        default: break;\n    }\n\n    return key;\n};\n\nwindow.addEventListener(\"keydown\", (e) => {\n    const key = getKeyNameFromCode(e.code);\n    if(key) {\n        input.keyStates[key][0] = true;\n    }\n});\n\nwindow.addEventListener(\"keyup\", (e) => {\n    const key = getKeyNameFromCode(e.code);\n    if(key) {\n        input.keyStates[key][0] = false;\n    }\n});\n\nconst canvas = document.getElementById('game-canvas');\ncanvas.addEventListener(\"mousemove\", (e) => {\n    e.preventDefault();\n    const scale = 320 / canvas.clientWidth;\n    const client_rect = canvas.getClientRects()[0];\n    input.mouse_x = (e.clientX - client_rect.x) * scale;\n    input.mouse_y = (e.clientY - client_rect.y) * scale;\n    return false;\n});\n\ncanvas.addEventListener(\"mousedown\", (e) => {\n    e.preventDefault();\n    input.mouse_down = true;\n    input.keyStates['mouse'][0] = true;\n    return false;\n});\n\nwindow.addEventListener(\"mouseup\", (e) => {\n    e.preventDefault();\n    input.keyStates['mouse'][0] = false;\n    return false;\n});\n\n","import { Howl } from 'howler';\n\nclass MusicManager {\n    constructor() {\n        this.music = {}\n\n        this.music.menuLoop = new Howl({\n            src: ['res/sounds/Menu_Loop.mp3'],\n            loop: true,\n        });\n\n        this.music.gameLoop = new Howl({\n            src: ['res/sounds/Game_Loop.mp3'],\n            loop: true,\n        });\n\n        this.music.creditsLoop = new Howl({\n            src: ['res/sounds/Credits_Loop.mp3'],\n            loop: true,\n        });\n\n        this.setGameState();\n    }\n\n    setMenuState() {\n        this.music.gameLoop.stop();\n        this.music.menuLoop.play();\n    }\n\n    setGameState() {\n        this.music.creditsLoop.stop();\n        this.music.menuLoop.stop();\n        this.music.gameLoop.play();\n    }\n\n    setCreditsState() {\n        this.music.menuLoop.stop();\n        this.music.gameLoop.stop();\n        this.music.creditsLoop.play();\n    }\n\n    update(deltaTime) {\n    }\n}\n\nexport const musicManager = new MusicManager();\n\n","import { GameObject } from \"./game.js\";\nimport { gfx } from \"./graphics.js\";\nimport { input } from \"./input.js\";\nimport { camera } from \"./camera.js\";\nimport { Animation } from \"./animation.js\";\n\nconst MAX_FALL_SPEED = 128;\nconst CLIMB_SPEED = 24;\n\nconst COLLISION_LAYER = 1;\nconst STAIRS_RIGHT = 50;\nconst STAIRS_LEFT = 51;\nconst LADDER = 52;\n\nconst states = {\n    PLATFORMING: 0,\n    TILE_PLACING: 1\n};\n\nexport class Player extends GameObject {\n    constructor(game) {\n        super();\n\n        this.state = states.PLATFORMING;\n\n        this.width = 6;\n        this.height = 12;\n\n        this.idle_anim = new Animation('player_idle');\n        this.idle_anim.anchor_x = 0.5;\n        this.idle_anim.anchor_y = 1.0;\n\n        this.walk_right_anim = new Animation('player_walk_right');\n        this.walk_right_anim.anchor_x = 0.5;\n        this.walk_right_anim.anchor_y = 1.0;\n\n        this.walk_left_anim = new Animation('player_walk_left');\n        this.walk_left_anim.anchor_x = 0.5;\n        this.walk_left_anim.anchor_y = 1.0;\n\n        this.climbing_anim = new Animation('player_climbing');\n        this.climbing_anim.anchor_x = 0.5;\n        this.climbing_anim.anchor_y = 1.0;\n\n        this.falling_anim = new Animation('player_falling');\n        this.falling_anim.anchor_x = 0.5;\n        this.falling_anim.anchor_y = 1.0;\n\n        this.curr_anim = this.idle_anim;\n\n        this.game = game;\n        this.map = game.map;\n\n        this.speed = 48;\n        this.fall_speed = 0;\n\n        this.x = this.map.properties.player_start_x * this.map.tile_width;\n        this.y = this.map.properties.player_start_y * this.map.tile_height;\n\n        this.remainder_x = 0;\n        this.remainder_y = 0;\n    }\n\n    update(dt) {\n\n        if(this.state == states.PLATFORMING) {\n            let movement_x = 0;\n            if(input.isKeyDown('a', 'left')) {\n                movement_x -= 1;\n            }\n\n            if(input.isKeyDown('d', 'right')) {\n                movement_x += 1;\n            }\n\n            if(Math.abs(movement_x) > 0) {\n                this.moveX(movement_x * this.speed * dt);\n                if(movement_x > 0) {\n                    this.curr_anim = this.walk_right_anim;\n                }\n                else {\n                    this.curr_anim = this.walk_left_anim;\n                }\n            }\n            else {\n                this.curr_anim = this.idle_anim;\n            }\n\n            let can_open_ipad = true;\n\n            if(this.collidesAt(this.x, this.y+1)) {\n                this.fall_speed = 0;\n            }\n            else {\n                can_open_ipad = false;\n                this.fall_speed += 4;\n                if(this.fall_speed > MAX_FALL_SPEED) {\n                    this.fall_speed = MAX_FALL_SPEED;\n                }\n\n                this.curr_anim = this.falling_anim;\n            }\n\n            const foottile = this.tileAt(this.x, this.y);\n            if(foottile === STAIRS_LEFT || foottile === STAIRS_RIGHT) {\n                can_open_ipad = true;\n                const base_y = Math.floor(this.y / this.map.tile_height) * this.map.tile_height;\n\n                if(foottile === STAIRS_LEFT) {\n                    const t = ((this.x-this.width/2) % this.map.tile_width) / this.map.tile_width;\n                    this.y = Math.floor(base_y + this.map.tile_height * t)-2;\n                }\n                else {\n                    const t = ((this.x+this.width/2) % this.map.tile_width) / this.map.tile_width;\n                    this.y = Math.floor(base_y + (this.map.tile_height-1) * (1-t))-2;\n                }\n            }\n            else if(foottile === LADDER) {\n                can_open_ipad = false;\n                this.fall_speed = 0;\n\n                if(input.isKeyDown('up', 'w')) {\n                    this.fall_speed = -CLIMB_SPEED;\n                }\n\n                if(input.isKeyDown('down', 's')) {\n                    this.fall_speed = CLIMB_SPEED;\n                }\n\n                this.curr_anim = this.climbing_anim;\n            }\n\n            this.moveY(this.fall_speed * dt);\n\n            camera.target(this.x, this.y);\n\n            if(can_open_ipad && input.isKeyJustPressed('e')) {\n                this.state = states.TILE_PLACING;\n            }\n        }\n        else {\n            const mouse_x = input.mouse_x + camera.x;\n            const mouse_y = input.mouse_y + camera.y;\n\n            const tile_x = Math.floor(mouse_x / this.map.tile_width);\n            const tile_y = Math.floor(mouse_y / this.map.tile_height);\n            const tile_index = tile_x + tile_y * this.map.width;\n\n            if(input.isKeyJustPressed('mouse')) {\n                this.map.layers[0].tiles[tile_index] = 1;\n            }\n\n            gfx.fillStyle = 'rgba(0, 255, 0, 0.5)';\n            gfx.fillRect(tile_x*this.map.tile_width, tile_y*this.map.tile_height,\n                         this.map.tile_width, this.map.tile_height);\n\n            // Do ipad animations\n            //\n            if(input.isKeyJustPressed('e')) {\n                this.state = states.PLATFORMING;\n            }\n        }\n\n        // Draw\n        this.curr_anim.update(dt);\n        this.curr_anim.draw(this.x, this.y);\n\n        if(input.isKeyDown('q')) {\n            gfx.fillStyle = 'rgba(255, 0, 255, 0.5)';\n            gfx.fillRect(this.x-this.width/2, this.y-this.height, this.width, this.height);\n        }\n    }\n\n    moveX(amount) {\n        this.remainder_x += amount;\n        let move = Math.round(this.remainder_x);\n\n        if(move !== 0) {\n            this.remainder_x -= move;\n            const sign = Math.sign(move);\n\n            while(move !== 0) {\n                if(!this.collidesAt(this.x + sign, this.y)) {\n                    this.x += sign;\n                    move -= sign;\n                }\n                else break;\n            }\n        }\n    }\n\n    moveY(amount) {\n        this.remainder_y += amount;\n        let move = Math.round(this.remainder_y);\n\n        if(move !== 0) {\n            this.remainder_y -= move;\n            const sign = Math.sign(move);\n\n            while(move !== 0) {\n                if(!this.collidesAt(this.x, this.y + sign)) {\n                    this.y += sign;\n                    move -= sign;\n                }\n                else break;\n            }\n        }\n    }\n\n    collidesAt(x, y) {\n        const tiles = [\n            this.tileAt(x-this.width/2, y-this.height),\n            this.tileAt(x+this.width/2, y-this.height),\n            this.tileAt(x-this.width/2, y),\n            this.tileAt(x+this.width/2, y)\n        ];\n\n        for(var i=0; i<tiles.length; ++i) {\n            const tile = tiles[i];\n            if(tile !== 0 &&\n               tile !== STAIRS_LEFT &&\n               tile !== STAIRS_RIGHT &&\n               tile !== LADDER) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    tileAt(x, y) {\n        const index = Math.floor(x / this.map.tile_width) +\n                      Math.floor(y / this.map.tile_height) * this.map.width;\n        const tile = this.map.layers[COLLISION_LAYER].tiles[index];\n        return tile;\n    }\n}\n\n","import { images } from \"./graphics.js\";\nimport { ajax } from \"./ajax.js\"\nimport { Tileset } from \"./tileset.js\";\n\n// Reference: https://doc.mapeditor.org/en/stable/reference/json-map-format/\n\nexport const tiled_map_defs = {};\n\nfunction createTileset(ts) {\n    const result = new Tileset(ts.name, ts.tilewidth, ts.tileheight, ts.margin, ts.spacing);\n    for(const tile in ts.tiles) {\n        if(ts.tiles[tile].hasOwnProperty('animation')) {\n            const anim = {};\n            anim.last_frame_start = performance.now();\n            anim.current_index = 0;\n            anim.frames = [];\n\n            for(const frame of ts.tiles[tile].animation) {\n                anim.frames.push({\n                    tile: frame.tileid,\n                    duration: frame.duration\n                });\n            }\n\n            anim.current = anim.frames[0];\n\n            result.animated_tiles[ts.tiles[tile].id] = anim;\n        }\n    }\n\n    return result;\n}\n\nexport class TiledMap {\n    constructor(map_name) {\n        const map = JSON.parse(tiled_map_defs[map_name]);\n\n        this.name = map_name;\n        this.properties = {};\n        if(typeof map.properties !== 'undefined') {\n            for(const prop of map.properties) {\n                this.properties[prop.name] = prop.value;\n            }\n        }\n\n        this.tileset = createTileset(map.tilesets[0]);\n        this.width = map.width;\n        this.height = map.height;\n        this.tile_width = this.tileset.width;\n        this.tile_height = this.tileset.height;\n        this.layers = [];\n        this.objects = {};\n\n        for(const l of map.layers) {\n            if(l.type === \"tilelayer\") {\n                const layer = {\n                    tiles: l.data,\n                    properties: {},\n                    name: l.name\n                };\n\n                if(typeof l.properties !== 'undefined') {\n                    for(const prop of l.properties) {\n                        layer.properties[prop.name] = prop.value;\n                    }\n                }\n\n                this.layers.push(layer);\n            }\n            else if(l.type === \"objectgroup\") {\n                const group = {\n                    objects: {},\n                    properties: {}\n                };\n\n                for(const obj of l.objects) {\n                    group.objects[obj.name] = obj;\n                }\n\n                for(const prop of l.properties) {\n                    group.properties[prop.name] = prop.value;\n                }\n\n                this.objects[l.name] = group;\n            }\n            else console.assert(\"Unsupported Tiled map layer type '\"+l.type+\"'\");\n        }\n    }\n\n    drawLayer(i) {\n        const layer = this.layers[i];\n        for(var y=0; y<this.height; ++y) {\n            for(var x=0; x<this.width; ++x) {\n                const index = x + y * this.width;\n                this.tileset.drawTile(layer.tiles[index],\n                                      x*this.tile_width,\n                                      y*this.tile_height);\n            }\n        }\n    }\n}\n\nexport function loadMapDefs(maps) {\n    return new Promise((resolve, reject) => {\n        if(maps.length === 0) {\n            resulve();\n            return;\n        }\n\n        const map_promises = [];\n\n        for(const map_name in maps) {\n            map_promises.push(new Promise((resolve, reject) => {\n                ajax.get(maps[map_name])\n                .then((map_def) => {\n                    tiled_map_defs[map_name] = map_def;\n                    resolve();\n                })\n                .catch((url) => {\n                    console.error(\"Failed to fetch map def at \"+url);\n                    reject(url);\n                });\n            }));\n        }\n\n        Promise.all(map_promises)\n        .then(() => {\n            resolve();\n        })\n        .catch((failed_maps) => {\n            console.error(\"Failed to load \"+failed_maps);\n            reject(failed_maps);\n        });\n    });\n}\n\n","import { gfx, sprites } from \"./graphics.js\";\n\nexport class Tileset {\n    constructor(image, tileWidth, tileHeight, margin, spacing) {\n        this.tilemap = sprites[image];\n        this.width = tileWidth;\n        this.height = tileHeight;\n        this.margin = margin;\n        this.spacing = spacing;\n\n        const imgWidth = this.tilemap.width;\n        this.widthWithSpacing = this.width + this.spacing;\n        this.heightWithSpacing = this.height + this.spacing;\n        this.tilesAcross = Math.floor(imgWidth / this.widthWithSpacing);\n        this.animated_tiles = {};\n    }\n\n    /*\n     * 'tile' is a number from 1 to n, where 1 would draw the top left tile in the sheet,\n     * and 2 would draw the tile to the right of that one, and so on.\n     * 0 is accepted, but will not draw anything. ( For empty tiles )\n     * These numbers are the same as they would be in Tiled\n     */\n    drawTile(tile, x, y) {\n        if(tile === 0) return;\n\n        --tile;\n\n        const animated_tile = this.animated_tiles[tile];\n        if(!!animated_tile) {\n            const now = performance.now();\n            if(now - animated_tile.last_frame_start > animated_tile.current.duration) {\n                animated_tile.last_frame_start = now;\n                ++animated_tile.current_index;\n                if(animated_tile.current_index >= animated_tile.frames.length) {\n                    animated_tile.current_index = 0;\n                }\n\n                animated_tile.current = animated_tile.frames[animated_tile.current_index];\n            }\n\n            tile = animated_tile.current.tile;\n        }\n\n        gfx.drawImage(\n            this.tilemap,\n            this.margin + this.widthWithSpacing * (tile % this.tilesAcross),\n            this.margin + this.heightWithSpacing * Math.floor(tile / this.tilesAcross),\n            this.width, this.height,\n            x, y, this.width, this.height);\n    }\n}\n\n","// Sortof ported/inspired by hump.timer (https://github.com/vrld/hump/blob/master/timer.lua)\n//\n// USAGE:\n//\n// Run function every frame for 3 seconds:\n// Timer.during(3, () => { ... });\n//\n// the callback gets passed the delta time, and the time remaining, both in seconds\n//\n// during can also take another function as a third parameter that will be called after the last\n// time the main callback is called.\n//\n// Print a random number after 2 seconds\n// Timer.after(2, () => { console.log(Math.random()); });\n//\n// Print a random number at 2 second intervals 5 times\n// If the last option is left out, it pulses for ever.\n// Timer.every(2, () => { console.log(Math.random()); }, 5);\n//\n// The pulsing can be cancelled early by returning false from the callback.\n//\n// The callbacks passed to after and every get passed the callback it self to allow the following:\n// Pulse for ever, but with random intervals:\n// Timer.after(Math.random(), (f) => {\n//     console.log(\"pulse\");\n//     Timer.after(Math.random(), f);\n// });\n//\n// To setup scripted events:\n// Timer.script(function*() {\n//     console.log(\"Walk to the door\");\n//     yield 2;\n//     console.log(\"Open the door\");\n//     yield 1;\n//     console.log(\"Look outside\");\n// });\n//\n// Note that Timer.script must be passed a generator function\n//\n// Tween the radius of a circle from up to 64 and back over 1 second:\n// const circle = { radius: 16 };\n// Timer.tween(1, circle, { radius: 64 }, 'inout');\n//\n// The fourth parameter decides if the tween should move the values up to target ('in'),\n// from target back to initial 'out', or up to target and back again ('inout').\n//\n// Like with duration, you can pass another function as a last parameter that will get called when the tween is complete.\n//\n// It may be useful to create more local timers. (To have pulses that last until something gets destroyed and so on).\n// to get that, import the TimerInstance class, and create a new instance from that\n//\n// Also, the times and durations here is approximations at best. Do not rely on them to be accurate\n//\n\nfunction _nothing_() {}\n\nfunction updateTimerHandle(handle, dt) {\n    handle.time += dt;\n    handle.during(dt, Math.max(handle.limit - handle.time, 0));\n\n    while(handle.time >= handle.limit && handle.count > 0) {\n        if(handle.after(handle.after) === false) {\n            handle.count = 0;\n            break;\n        }\n\n        handle.time -= handle.limit;\n        --handle.count;\n    }\n}\n\nexport class TimerInstance {\n    constructor() {\n        this.functions = [];\n    }\n\n    update(dt) {\n        for(var i=this.functions.length-1; i>=0; --i) {\n            const handle = this.functions[i];\n            updateTimerHandle(handle, dt);\n\n            if(handle.count === 0) {\n                this.functions.splice(i, 1);\n            }\n        }\n    }\n\n    clear() {\n        this.functions = [];\n    }\n\n    during(delay, during, after) {\n        const handle = {\n            time: 0,\n            during: during,\n            after: after || _nothing_,\n            limit: delay,\n            count: 1\n        };\n\n        handle.cancel = () => {\n            handle.count = 0;\n        };\n\n        this.functions.push(handle);\n        return handle;\n    }\n\n    after(delay, func) {\n        return this.during(delay, _nothing_, func);\n    }\n\n    every(delay, after, count) {\n        count = count || Infinity;\n        const handle = {\n            time: 0,\n            during: _nothing_,\n            after: after,\n            limit: delay,\n            count: count\n        };\n\n        handle.cancel = () => {\n            handle.count = 0;\n        };\n\n        this.functions.push(handle);\n        return handle;\n    }\n\n    script(f) {\n        const coroutine = f();\n\n        this.after(1, (f) => {\n            const delay = coroutine.next();\n            if(!delay.done) {\n                this.after(delay.value, f);\n            }\n        });\n    }\n\n    tween(duration, obj, target, func_name, after) {\n        function the_good_tween(t) {\n            return 3*t*t - 2*t*t*t;\n        }\n\n        const tween_funcs = {\n            in: the_good_tween,\n            out: (t) => {\n                t=1-t;\n                return the_good_tween(t);\n            },\n            inout: (t) => {\n                if(t<0.5) t*=2;\n                else t=1-(2*(t-0.5));\n                return the_good_tween(t);\n            }\n        };\n\n        var time = 0;\n        const tween = tween_funcs[func_name || 'in'];\n        const original_values = {};\n        for(const prop in target) {\n            original_values[prop] = obj[prop];\n        }\n\n        this.during(duration, (dt, remaining) => {\n            // Run every frame until done\n            time += dt;\n            const t = tween(Math.min(time / duration, 1));\n\n            for(const prop in target) {\n                obj[prop] = original_values[prop]*(1-t) + target[prop]*t;\n            }\n        },\n        () => {\n            // Run once after done\n            const t = tween(1);\n            for(const prop in target) {\n                obj[prop] = original_values[prop]*(1-t) + target[prop]*t;\n            }\n\n            if(after) {\n                after();\n            }\n        });\n    }\n}\n\nexport const Timer = new TimerInstance();\n\n","export const getPropertyOrDefault = (obj, prop, def) => {\n    if(obj.hasOwnProperty(prop)) return obj[prop];\n    else return def;\n}\n\nexport const requireProperty = (obj, prop) => {\n    if(obj.hasOwnProperty(prop) && !!obj[prop]) return obj[prop];\n    else {\n        console.error(`The property ${prop} is required in ${obj}, but is not present!`);\n        return obj[prop];\n    }\n}\n\n// Removes the given element from the given array.\n// Returns true if the element was found and removed,\n// false otherwise.\nexport const removeFromArray = (array, element) => {\n    const index = array.indexOf(element);\n    if(index >= 0) {\n        array.splice(index, 1);\n        return true;\n    }\n\n    return false;\n}\n\n"],"sourceRoot":""}